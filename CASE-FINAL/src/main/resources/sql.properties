#create database `case-store-2`;
#use `case-store-2`;
#CREATE TABLE customers (
#id BIGINT PRIMARY KEY auto_increment,
#`name` VARCHAR(50) NOT NULL,
#address VARCHAR(255) NOT NULL,
#phone VARCHAR(20) NOT NULL,
#is_active boolean default true
#);
#
#CREATE TABLE products (
#id BIGINT PRIMARY KEY auto_increment,
#`name` VARCHAR(50) NOT NULL,
#price double NOT NULL,
#quantity INT NOT NULL,
#`status` boolean default true
#);
#
#CREATE TABLE orders (
#id BIGINT PRIMARY KEY AUTO_INCREMENT,
#customer_id BIGINT NOT NULL,
#order_date DATE,
#total_amount double,
#FOREIGN KEY (customer_id) REFERENCES customers(id),
#`status` boolean default true
#);
#CREATE TABLE order_details (
#id bigint primary key auto_increment,
#order_id BIGINT NOT NULL,
#product_id BIGINT NOT NULL,
#quantity INT NOT NULL,
#FOREIGN KEY (order_id) REFERENCES orders(id),
#FOREIGN KEY (product_id) REFERENCES products(id)
#);


#use `case-store-2`;
#create table purchases(
#id BIGINT primary key,
#`status` VARCHAR(50),
#total_price double);
#create table product_items(
#id BIGINT primary key auto_increment,
#product_name VARCHAR(50) not null,
#quantity int not null,
#purchase_id BIGINT,
#FOREIGN KEY (purchase_id) REFERENCES purchases(id)
#);
#_________________________________________________________________
#use `case-store-2`;
#-- tinh tong tien cua don hang
#UPDATE orders
#SET total_amount = (
#SELECT SUM(`order_details`.quantity * products.price)
#FROM order_details
#INNER JOIN products ON order_details.product_id = products.id
#WHERE order_details.order_id = orders.order_id
#);
#
#SELECT `order_details`.order_id, `order_details`.quantity, orders.order_date, orders.total_amount, orders.`status`
#, customers.id as customer_id, customers.`name`, products.id as product_id, products.`name`, products.price
#FROM `order_details`
#left join orders on `order_details`.order_id = orders.order_id
#left join products on `order_details`.product_id = products.id
#left join customers on orders.customer_id = customers.id;


